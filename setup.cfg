## More info:
# https://setuptools.readthedocs.io/en/latest/setuptools.html
# https://packaging.python.org/guides/distributing-packages-using-setuptools
# https://www.python.org/dev/peps/pep-0345/#metadata-version

[venv]
extras =
    dev
    docs
    tests

[metadata]
url = https://github.com/HeavenVolkoff/aRx
name = aRx
author = Vítor Augusto da Silva Vasconcellos, Børge Lanes, Dag Brattli
version = 1.0.0b7
license = MPL 2.0
keywords =
    base
    modules
    bootstrap
    foundation
maintainer = Vítor Vasconcellos
description = Asynchronous Reactive eXtensions for Python 3.6+
classifiers =
    Topic :: Software Development :: Interpreters
    License :: OSI Approved :: Mozilla Public License 2.0 (MPL 2.0)
    Framework :: AsyncIO
    Intended Audience :: Developers
    Development Status :: 4 - Beta
    Programming Language :: Python :: 3 :: Only
    Programming Language :: Python :: 3.6
    Programming Language :: Python :: 3.7
    # https://pypi.org/pypi?%3Aaction=list_classifiers
download_url = https://github.com/HeavenVolkoff/aRx/releases
project_urls =
    Bug Tracker = https://github.com/HeavenVolkoff/aRx/issues
    Source Code = https://github.com/HeavenVolkoff/aRx
author_email = vasconcellos.dev@gmail.com, dag@brattli.net
maintainer_email = vasconcellos.dev@gmail.com
long_description = file: README.md
long_description_content_type = text/markdown; charset=UTF-8

[options]
# bool (Indicates whether your package is able to be run from within a zip archive)
zip_safe = True
# list-semi
setup_requires =
    setuptools >= 40.1.0
    # List all packages required for installing your package (Running setup.py)
# str (Define python interpreter version requirement)
python_requires = >=3.6
# list-semi
install_requires =
    async_tools @ git+https://github.com/HeavenVolkoff/async_tools.git
    prop @ git+https://github.com/HeavenVolkoff/prop.git
    # List your packages dependencies
# bool (Automatically include any data file, declared inside MANIFEST.in, inside your package.)
# It's recommend to use package_data and exclude_package_data instead, if possible.
include_package_data = False

[options.package_data]
* = VERSION

# Configure find: and find_namespace:
[options.packages.find]
where = src

# Extra dependencies, can be installed with: `pip install package[extra]`
[options.extras_require]
# extra_name = requirements, ...
dev =
    twine
    black
    isort
    venvtools
    # Put your development requirements here
docs =
    sphinx
    sphinxcontrib-napoleon
    sphinx_bootstrap_theme
    sphinx-autobuild
    travis-sphinx
    # Put your documentation requirements here
tests =
    asynctest
    # Put your tests requirements here
